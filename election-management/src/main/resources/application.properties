quarkus.application.name=election-management
quarkus.shutdown.timeout=5S

# TESTCONTAINERS
# quarkus.datasource.devservices.image-name=mariadb:10.11.2

# FLYWAY
quarkus.flyway.migrate-at-start=true

# HIBERNATE
# quarkus.datasource.db-kind=mariadb
# quarkus.hibernate-orm.database.generation=none
# %dev.quarkus.hibernate-orm.log.sql=true
# %test.quarkus.hibernate-orm.log.sql=true
# %dev.quarkus.hibernate-orm.log.bind-parameters=true
# %test.quarkus.hibernate-orm.log.bind-parameters=true

# Propriedades ORM
quarkus.datasource.jdbc.max-size=16
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=true

#GLOBAL Conexao Postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/election
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.test.continuous-testing=disabled

###### Config para Acessar Banco sem Docker
#quarkus.datasource.driver=com.mysql.cj.jdbc.Driverh
#quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/election
#quarkus.datasource.username=root
#quarkus.datasource.password=
#quarkus.hibernate-orm.database.generation=none

# LOGGING
%prod.quarkus.log.handler.gelf.enabled=true
%prod.quarkus.log.handler.gelf.additional-field."app".value=${quarkus.application.name}
%prod.quarkus.log.handler.gelf.include-full-mdc=true
%prod.quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# OPENTELEMETRY
%prod.quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
%prod.quarkus.opentelemetry.enabled=false
%dev.quarkus.opentelemetry.enabled=false
%test.quarkus.opentelemetry.enabled=false